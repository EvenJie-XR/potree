export class MapView {
    constructor(viewer: any);
    viewer: any;
    webMapService: string;
    mapProjectionName: string;
    mapProjection: any;
    sceneProjection: any;
    extentsLayer: any;
    cameraLayer: any;
    toolLayer: any;
    sourcesLayer: any;
    sourcesLabelLayer: any;
    images360Layer: any;
    enabled: boolean;
    createAnnotationStyle: (text: any) => any[];
    createLabelStyle: (text: any) => any;
    showSources(show: any): void;
    init(): void;
    elMap: any;
    elTooltip: any;
    map: any;
    dragBoxLayer: any;
    onPointcloudAdded: (e: any) => void;
    on360ImagesAdded: (e: any) => void;
    onAnnotationAdded: (e: any) => void;
    setScene(scene: any): void;
    scene: any;
    getExtentsLayer(): any;
    gExtent: any;
    getAnnotationsLayer(): any;
    annotationsLayer: any;
    getCameraLayer(): any;
    gCamera: any;
    getToolLayer(): any;
    getImages360Layer(): any;
    getSourcesLayer(): any;
    getSourcesLabelLayer(): any;
    setSceneProjection(sceneProjection: any): void;
    toMap: any;
    toScene: any;
    getMapExtent(): {
        bottomLeft: any;
        bottomRight: any;
        topRight: any;
        topLeft: any;
    };
    getMapCenter(): number[];
    updateToolDrawings(): void;
    addImages360(images: any): void;
    load(pointcloud: any): Promise<void>;
    toggle(): void;
    update(delta: any): void;
    set sourcesVisible(arg: any);
    get sourcesVisible(): any;
}
